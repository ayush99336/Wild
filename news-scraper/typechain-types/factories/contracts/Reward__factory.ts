/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Reward, RewardInterface } from "../../contracts/Reward";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "Rewarded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f5806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806327b0229e14610030575b600080fd5b61004a6004803603810190610045919061011a565b61004c565b005b3373ffffffffffffffffffffffffffffffffffffffff1682826040516100739291906101a6565b60405180910390207ff2d53076f4e663a00f8f769b0e139643104169b5e6d4bf53f383fd45f6b3d02360405160405180910390a35050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126100da576100d96100b5565b5b8235905067ffffffffffffffff8111156100f7576100f66100ba565b5b602083019150836001820283011115610113576101126100bf565b5b9250929050565b60008060208385031215610131576101306100ab565b5b600083013567ffffffffffffffff81111561014f5761014e6100b0565b5b61015b858286016100c4565b92509250509250929050565b600081905092915050565b82818337600083830152505050565b600061018d8385610167565b935061019a838584610172565b82840190509392505050565b60006101b3828486610181565b9150819050939250505056fea2646970667358221220fcf32f73d4b5321a12ee72a6ed633b17201052d1264f2d51f49002f0f944cb8e64736f6c63430008140033";

type RewardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reward__factory extends ContractFactory {
  constructor(...args: RewardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Reward & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Reward__factory {
    return super.connect(runner) as Reward__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardInterface {
    return new Interface(_abi) as RewardInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Reward {
    return new Contract(address, _abi, runner) as unknown as Reward;
  }
}
